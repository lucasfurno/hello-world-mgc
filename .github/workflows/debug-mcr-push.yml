name: Debug MCR Large Image Push

on:
  workflow_dispatch: # Permite acionamento manual

jobs:
  build-and-push-large-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Mantemos a matriz para lógica, mas corrigiremos o nome do host no passo seguinte
        region: [se-1, ne-1]
      fail-fast: false 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Define MCR Endpoint and Image Tag
        id: mcr-config
        run: |
          # Remove o hífen da variável da região para formar o nome de host correto
          REGION_NO_HYPHEN=$(echo "${{ matrix.region }}" | tr -d '-')
          REGISTRY_URL="container-registry.br-${REGION_NO_HYPHEN}.magalu.cloud"
          
          # Monta a tag da imagem no formato especificado
          IMAGE_TAG="${REGISTRY_URL}/hello-world-furno/hello-world:latest"
          
          echo "REGISTRY_URL=${REGISTRY_URL}" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "Verifying constructed URL: ${REGISTRY_URL}"

      - name: Debug DNS Resolution
        run: |
          echo "--- Testing DNS resolution for ${{ steps.mcr-config.outputs.REGISTRY_URL }} ---"
          # Instala ferramentas de DNS se não estiverem presentes
          sudo apt-get update && sudo apt-get install -y dnsutils
          
          echo "--- Running nslookup ---"
          nslookup ${{ steps.mcr-config.outputs.REGISTRY_URL }}
          
          echo "--- Running dig ---"
          dig ${{ steps.mcr-config.outputs.REGISTRY_URL }}
          
          echo "------------------------------------------------"

      - name: Select Correct Password for Region
        id: region-password
        run: |
          if [ "${{ matrix.region }}" == "se-1" ]; then
            echo "MCR_PASSWORD=${{ secrets.MCR_PASSWORD_SE1 }}" >> $GITHUB_OUTPUT
          else
            echo "MCR_PASSWORD=${{ secrets.MCR_PASSWORD_NE1 }}" >> $GITHUB_OUTPUT
          fi

      - name: Log in to Magalu Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ steps.mcr-config.outputs.REGISTRY_URL }}
          username: ${{ secrets.MCR_USERNAME }}
          password: ${{ steps.region-password.outputs.MCR_PASSWORD }}

      - name: Build a 8GB Docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: ./app
          file: ./app/Dockerfile
          push: false
          tags: ${{ steps.mcr-config.outputs.IMAGE_TAG }}
          load: true

      - name: Run Traceroute
        run: |
          echo "--- Running Traceroute for ${{ matrix.region }} (${{ steps.mcr-config.outputs.REGISTRY_URL }}) ---"
          sudo apt-get install -y traceroute
          traceroute ${{ steps.mcr-config.outputs.REGISTRY_URL }}
          echo "------------------------------------------------"

      - name: Run TCPDUMP and Push Image
        run: |
          sudo tcpdump -i any host ${{ steps.mcr-config.outputs.REGISTRY_URL }} -w tcpdump_${{ matrix.region }}.pcap &
          TCPDUMP_PID=$!
          echo "Starting Docker push to ${{ steps.mcr-config.outputs.IMAGE_TAG }}"
          docker push ${{ steps.mcr-config.outputs.IMAGE_TAG }} || echo "Docker push failed for ${{ matrix.region }}"
          echo "Docker push finished. Stopping tcpdump..."
          sudo kill $TCPDUMP_PID
          sleep 5

      - name: Upload TCPDUMP results
        uses: actions/upload-artifact@v4
        with:
          name: tcpdump-capture-${{ matrix.region }}
          path: tcpdump_${{ matrix.region }}.pcap